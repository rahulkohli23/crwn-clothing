{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  yield console.log(\"I'm Fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // dispatch(fetchCollectionStart());\n  // collectionRef\n  // .get()\n  // .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // })\n  // .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,sBAAjE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,aAAN;;AAEJ,MAAG;AACC,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACO,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACG,uBAAuB,CAACW,cAAD,CAAxB,CAAT;AACH,GALD,CAMI,OAAMC,KAAN,EAAY;AACR,UAAMf,GAAG,CAACI,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GAXmC,CAapC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,uBAAjB,EACZX,oBADY,CAAhB;AAEH;AAED,OAAO,UAAUY,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CACNF,IAAI,CAACkB,oBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest ,call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport function* fetchCollectionAsync() {\n    yield console.log(`I'm Fired`);\n\ntry{\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n}\n    catch(error){\n        yield put(fetchCollectionsFailure(error.message));\n    }\n\n    // dispatch(fetchCollectionStart());\n\n    // collectionRef\n    // .get()\n    // .then(snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\n    // })\n    // .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync)\n}\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}