{"ast":null,"code":"import shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).error(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};\nexport const updateCollection = collectionsMap => ({\n  type: shopActionTypes.UDPATE_COLLECTIONS,\n  payload: collectionsMap\n});","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","error","message","updateCollection","UDPATE_COLLECTIONS"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBADgC;AAEtDD,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAE5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AAEAW,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEM,MAAMC,QAAN,IAAkB;AACpB,YAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KALD,EAMCY,KAND,CAMOA,KAAK,IAAI;AACZN,MAAAA,QAAQ,CAACH,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAR;AACH,KARD;AASH,GAbD;AAcH,CAhBM;AAkBP,OAAO,MAAMC,gBAAgB,GAAGd,cAAc,KAAI;AAC9CH,EAAAA,IAAI,EAAEJ,eAAe,CAACsB,kBADwB;AAE9Cb,EAAAA,OAAO,EAAEF;AAFqC,CAAJ,CAAvC","sourcesContent":["import shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionStart = () => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: shopActionTypes.fetchCollectionsFailure,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    \n    return dispatch => {\n        const collectionRef = firestore.collection(\"collections\");\n        dispatch(fetchCollectionStart());\n\n        collectionRef\n        .get()\n        .then(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        })\n        .error(error => {\n            dispatch(fetchCollectionsFailure(error.message));\n        });\n    }\n}\n\nexport const updateCollection = collectionsMap=> ({\n    type: shopActionTypes.UDPATE_COLLECTIONS,\n    payload: collectionsMap\n})"]},"metadata":{},"sourceType":"module"}