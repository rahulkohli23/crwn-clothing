{"ast":null,"code":"import _slicedToArray from \"/home/rahul/Desktop/projects/crwn-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rahul/Desktop/projects/crwn-clothing/src/components/signup/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-up.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = signUpStart => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentails = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentails.displayName,\n        email = userCredentails.email,\n        password = userCredentails.password,\n        confirmPassword = userCredentails.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const displayName = userCredentails.displayName,\n          email = userCredentails.email,\n          password = userCredentails.password,\n          confirmPassword = userCredentails.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sign Up with email and Password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    handleChange: handleChange,\n    value: displayName,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    handleChange: handleChange,\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/components/signup/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentails","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-up.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = (signUpStart, ) => {\nconst [userCredentails, setUserCredentials] = useState({\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n});\n\nconst { displayName, email, password, confirmPassword } = userCredentails;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const { displayName, email, password, confirmPassword } = userCredentails;\n    \n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    signUpStart({email, password, displayName});\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setUserCredentials({ [name]: value });\n  };\n\n    \n    return (\n      <div className=\"\">\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign Up with email and Password</span>\n\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            handleChange={handleChange}\n            value={displayName}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            handleChange={handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            handleChange={handleChange}\n            value={confirmPassword}\n            label=\"Confirm Password\"\n            required\n          />\n\n          <CustomButton type=\"submit\">Sign Up</CustomButton>\n        </form>\n      </div>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}