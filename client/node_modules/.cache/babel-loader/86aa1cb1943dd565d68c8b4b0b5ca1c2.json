{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchColllectionStart } from \"./shop/shop.sagas\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(fetchColllectionStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","fetchColllectionStart","rootReducer","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACvCH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,UAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchColllectionStart } from \"./shop/shop.sagas\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware]\n\nif(process.env.NODE_ENV === 'development') {\n    middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\n\nsagaMiddleware.run(fetchColllectionStart);\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}