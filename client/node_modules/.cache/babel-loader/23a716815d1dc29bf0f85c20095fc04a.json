{"ast":null,"code":"import _defineProperty from \"/home/rahul/Desktop/projects/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  console.log(cartItems);\n  console.log(cartItemToAdd);\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n  console.log(existingCartItem);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, {\n    cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","console","log","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEvDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAGA,QAAMG,gBAAgB,GAAGJ,SAAS,CAACK,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBN,aAAa,CAACM,EADrB,CAAzB;AAIAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;;AAEA,MAAIA,gBAAJ,EAAsB;AAClB,WAAOJ,SAAS,CAACQ,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBN,aAAa,CAACM,EAA9B,qBACMD,QADN;AACgBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD9C,SAEEH,QAHC,CAAP;AAKH;;AACD,SAAO,CAAC,GAAGN,SAAJ,EAAe;AAACC,IAAAA,aAAD;AAAgBQ,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AACH,CApBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n\n    console.log(cartItems);\n    console.log(cartItemToAdd);\n    \n    \n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === cartItemToAdd.id\n    )\n    \n    console.log(existingCartItem);\n\n    if (existingCartItem) {\n        return cartItems.map(cartItem => \n            cartItem.id === cartItemToAdd.id \n            ? {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n    return [...cartItems, {cartItemToAdd, quantity: 1}]\n}"]},"metadata":{},"sourceType":"module"}