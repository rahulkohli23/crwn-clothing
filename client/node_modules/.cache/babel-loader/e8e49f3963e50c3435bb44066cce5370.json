{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  yield console.log(\"I'm Fired\");\n  const collectionRef = firestore.collection(\"collections\"); // dispatch(fetchCollectionStart());\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,sBAAjE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,aAAN;AAGA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB,CAJoC,CAKpC;;AAEAD,EAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACb,uBAAuB,CAACY,cAAD,CAAxB,CAAR;AACH,GALD,EAMCE,KAND,CAMOC,KAAK,IAAIF,QAAQ,CAACZ,uBAAuB,CAACc,KAAK,CAACC,OAAP,CAAxB,CANxB;AAOH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,SAAS,CAACC,eAAe,CAACmB,uBAAjB,EACXd,oBADW,CAAf;AAEH","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport function* fetchCollectionAsync() {\n    yield console.log(`I'm Fired`);\n\n\n    const collectionRef = firestore.collection(\"collections\");\n    // dispatch(fetchCollectionStart());\n\n    collectionRef\n    .get()\n    .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}