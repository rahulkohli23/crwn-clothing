{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  yield console.log(\"I'm Fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // dispatch(fetchCollectionStart());\n\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","then","dispatch","catch","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,sBAAjE;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,aAAN;;AAEJ,MAAG;AACC,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACM,+BAAD,EAAkCM,QAAlC,CAAjC;AACH,GAJD,CAKI,OAAMG,KAAN,EAAY,CAEX,CAVmC,CAYpC;;;AAEAL,EAAAA,aAAa,CACZG,GADD,GAECG,IAFD,CAEMJ,QAAQ,IAAI;AACd,UAAME,cAAc,GAAGR,+BAA+B,CAACM,QAAD,CAAtD;AACAK,IAAAA,QAAQ,CAACd,uBAAuB,CAACW,cAAD,CAAxB,CAAR;AACH,GALD,EAMCI,KAND,CAMOH,KAAK,IAAIE,QAAQ,CAACb,uBAAuB,CAACW,KAAK,CAACI,OAAP,CAAxB,CANxB;AAOH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMrB,SAAS,CAACG,eAAe,CAACmB,uBAAjB,EACXd,oBADW,CAAf;AAEH","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport function* fetchCollectionAsync() {\n    yield console.log(`I'm Fired`);\n\ntry{\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n}\n    catch(error){\n\n    }\n\n    // dispatch(fetchCollectionStart());\n\n    collectionRef\n    .get()\n    .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}