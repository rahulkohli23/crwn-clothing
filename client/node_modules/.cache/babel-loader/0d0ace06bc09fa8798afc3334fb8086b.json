{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/projects/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux';\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \" GO TO CHECKOUT \"));\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CartItem","selectCartItems","withRouter","toggleCartHidden","CustomButton","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state"],"mappings":";AAAA,OAAQA,KAAR,MAAoB,OAApB;AACA,OAAO,6BAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KACb;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,MAAV,GAEGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFH,GAMA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPL,CADJ,EAWI,oBAAC,YAAD;AAAc,EAAA,OAAO,EACjB,MAAM;AAACJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACNL,IAAAA,QAAQ,CAACL,gBAAD,CAAR;AACJ,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,CADR;;AAmBA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,SAAS,EAAEL,eAAe,CAACc,KAAD;AADM,CAAZ,CAAxB;;AAGA,eAAeb,UAAU,CAACH,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import  React  from \"react\";\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux'\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst CartDropdown = ({ cartItems , history, dispatch}) => (\n        <div className=\"cart-dropdown\">\n            <div className=\"cart-items\" >\n                {cartItems.length ? \n                (\n                    cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} item={cartItem}/>\n                    ))\n                ):\n                (<span className=\"empty-message\">your cart is empty</span>)\n                }\n            </div>\n            <CustomButton onClick={\n                () => {history.push('/checkout');\n                 dispatch(toggleCartHidden)\n            }}> GO TO CHECKOUT </CustomButton>\n        </div>\n    )\n\nconst mapStateToProps = (state) => ({\n    cartItems: selectCartItems(state)\n})\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}