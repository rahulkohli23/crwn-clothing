{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/projects/crwn-clothing/src/components/signIn/signIn.component.jsx\";\nimport React from \"react\";\nimport './signIn.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password); // try{\n      //     await auth.signInWithEmailAndPassword(email, password);\n      //     this.setState({email: '',password: ''});\n      // }catch(error){\n      //     console.log(error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInstart = this.props.googleSignInstart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign in with email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInstart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Google Sign In \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInstart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/components/signIn/signIn.component.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","name","value","setState","render","googleSignInstart","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASH,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAD0B,YAElBR,gBAFkB,GAEG,KAAKK,KAFR,CAElBL,gBAFkB;AAAA,0BAGE,KAAKS,KAHP;AAAA,YAGlBC,KAHkB,eAGlBA,KAHkB;AAAA,YAGXC,QAHW,eAGXA,QAHW;AAK1BX,MAAAA,gBAAgB,CAACU,KAAD,EAAQC,QAAR,CAAhB,CAL0B,CAO1B;AACA;AACA;AACA;AACA;AACA;AACH,KAtBiB;;AAAA,SAwBlBC,YAxBkB,GAwBHL,KAAK,IAAI;AAAA,4BACIA,KAAK,CAACM,MADV;AAAA,YACZC,IADY,iBACZA,IADY;AAAA,YACNC,KADM,iBACNA,KADM;AAEpB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAASC;AAAX,OAAd;AACH,KA3BiB;;AAGd,SAAKN,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAG,EADD;AAEPC,MAAAA,QAAQ,EAAG;AAFJ,KAAX;AAIH;;AAsBDM,EAAAA,MAAM,GAAE;AAAA,UACIC,iBADJ,GAC0B,KAAKb,KAD/B,CACIa,iBADJ;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,KAAK,EAAC,OAHP;AAIC,MAAA,YAAY,EAAE,KAAKM,YAJpB;AAKC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KALnB;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,SAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAC,UAHN;AAIA,MAAA,YAAY,EAAE,KAAKE,YAJnB;AAKA,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QALlB;AAMA,MAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAiBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEO,iBAArC;AAAwD,MAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAjBJ,CAJJ,CADJ;AA8BH;;AA9D+B;;AAiEpC,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCF,EAAAA,iBAAiB,EAAE,MAAME,QAAQ,CAACrB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACU,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACpB,gBAAgB,CAAE;AAACU,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAF,CAAjB;AAFX,CAAL,CAAnC;;AAKA,eAAeV,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCjB,MAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport './signIn.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            email : '',\n            password : ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { emailSignInStart } = this.props;\n        const { email, password } = this.state;\n\n        emailSignInStart(email, password);\n\n        // try{\n        //     await auth.signInWithEmailAndPassword(email, password);\n        //     this.setState({email: '',password: ''});\n        // }catch(error){\n        //     console.log(error)\n        // }\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name] : value })\n    }\n\n    render(){\n        const { googleSignInstart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                     name='email'\n                     type='email' \n                     label='Email'\n                     handleChange={this.handleChange} \n                     value={this.state.email} \n                     required/>\n\n                    <FormInput \n                    name='password' \n                    type='password'\n                    label='Password' \n                    handleChange={this.handleChange} \n                    value={this.state.password} \n                    required/>\n\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign In </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInstart} isGoogleSignIn> Google Sign In </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInstart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart( {email, password} ))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}