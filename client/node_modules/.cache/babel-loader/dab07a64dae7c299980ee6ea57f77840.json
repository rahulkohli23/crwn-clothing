{"ast":null,"code":"import _defineProperty from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import CartActionTypes from\"./cart.types\";import{addItemToCart,removeItemFromCart}from'./cart.utils';var INITIAL_STATE={hidden:true,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CartActionTypes.TOGGLE_CART_HIDDEN:return _objectSpread({},state,{hidden:!state.hidden});case CartActionTypes.ADD_ITEM:return _objectSpread({},state,{cartItems:addItemToCart(state.cartItems,action.payload)});case CartActionTypes.CLEAR_ACTION_FROM_CART:return _objectSpread({},state,{cartItems:state.cartItems.filter(function(cartItem){return cartItem.id!==action.payload.id;})});case CartActionTypes.CLEAR_CART:return _objectSpread({},state,{cartItems:[]});case CartActionTypes.REMOVE_ITEM:return _objectSpread({},state,{cartItems:removeItemFromCart(state.cartItems,action.payload)});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ACTION_FROM_CART","filter","cartItem","id","CLEAR_CART","REMOVE_ITEM"],"mappings":"k5BAAA,MAAQA,CAAAA,eAAR,KAA8B,cAA9B,CACA,OAASC,aAAT,CAAyBC,kBAAzB,KAAkD,cAAlD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAE,IADU,CAElBC,SAAS,CAAE,EAFO,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,eAAe,CAACU,kBAArB,CACI,wBACOH,KADP,EAEIH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFnB,GAIJ,IAAKJ,CAAAA,eAAe,CAACW,QAArB,CACI,wBACOJ,KADP,EAEIF,SAAS,CAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF5B,GAIJ,IAAKZ,CAAAA,eAAe,CAACa,sBAArB,CACI,wBACON,KADP,EAEIF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACP,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAnC,EADD,CAFf,GAMJ,IAAKhB,CAAAA,eAAe,CAACiB,UAArB,CACI,wBACOV,KADP,EAEIF,SAAS,CAAE,EAFf,GAIJ,IAAKL,CAAAA,eAAe,CAACkB,WAArB,CACI,wBACOX,KADP,EAEIF,SAAS,CAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAFjC,GAIJ,QACI,MAAOL,CAAAA,KAAP,CA7BR,CA+BH,CAhCD,CAkCA,cAAeD,CAAAA,WAAf","sourcesContent":["import  CartActionTypes  from \"./cart.types\";\nimport { addItemToCart , removeItemFromCart} from './cart.utils';\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            };\n        case CartActionTypes.CLEAR_ACTION_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    cartItem => cartItem.id !== action.payload.id\n                )\n            }\n        case CartActionTypes.CLEAR_CART:\n            return {\n                ...state,\n                cartItems: []\n            }\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\n            }\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}