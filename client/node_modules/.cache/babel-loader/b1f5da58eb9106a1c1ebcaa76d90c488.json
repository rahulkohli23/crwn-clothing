{"ast":null,"code":"import _defineProperty from \"/home/rahul/Desktop/projects/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { UserActionTypes } from \"./user.types\";\nimport { auth, googleprovider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"../user/user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleprovider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(email);\n\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleprovider","createUserProfileDocument","signInSuccess","signInFailure","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","console","log","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,mBAAvC,EAA4DC,kBAA5D,EAAgFC,kBAAhF,QAA0G,sBAA1G;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACkB,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CADxB;AAAA,UACSS,IADT,QACSA,IADT;;AAEC,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACLO,aAAa;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADR,CAAT;AAIH,GARD,CAQC,OAAMC,KAAN,EAAa;AACV,UAAMpB,GAAG,CAACQ,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AADD,kBAGkB,MAAMrB,IAAI,CAACyB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAHxB;AAAA,UAGSZ,IAHT,SAGSA,IAHT;;AAIC,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACLO,aAAa;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADR,CAAT;AAGH,GATD,CAUA,OAAMC,KAAN,EAAa;AACT,UAAMpB,GAAG,CAACQ,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAMD,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM/B,GAAG,CAAC,CAAEC,IAAI,CAACmB,mBAAD,CAAN,EAA6BnB,IAAI,CAAC4B,kBAAD,CAAjC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call} from \"redux-saga/effects\";\nimport { UserActionTypes } from \"./user.types\";\nimport { auth, googleprovider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"../user/user.actions\";\n\nexport function* signInWithGoogle() {\n    try{\n        const { user } = yield auth.signInWithPopup(googleprovider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        )\n        \n    }catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try{\n        console.log(email);\n        \n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        );\n    }\n    catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\n\n\n\nexport function* userSagas() {\n    yield all([ call(onGoogleSignInStart), call(onEmailSignInStart) ])\n}"]},"metadata":{},"sourceType":"module"}