{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/projects/crwn-clothing/src/components/signup/sign-up.component.jsx\";\nimport React from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-up.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      signUpStart({\n        email,\n        password,\n        displayName\n      }); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(\n      //     email,\n      //     password\n      //   );\n      //   await createUserProfileDocument(user, { displayName });\n      //   this.setState(getSnapshotFromUserAuth\n      //     {\n      //       displayName: \"\",\n      //       email: \"\",\n      //       password: \"\",\n      //       confirmPassword: \"\"\n      //     },\n      //     () => console.log(this.state)\n      //   );\n      // } catch (error) {\n      //   console.log(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Sign Up with email and Password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      handleChange: this.handleChange,\n      value: displayName,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      handleChange: this.handleChange,\n      value: confirmPassword,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/components/signup/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","connect","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-up.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { signUpStart } = this.props;\n    const { displayName, email, password, confirmPassword } = this.state;\n    \n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    signUpStart({email, password, displayName});\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n\n    //   await createUserProfileDocument(user, { displayName });\n    //   this.setState(getSnapshotFromUserAuth\n    //     {\n    //       displayName: \"\",\n    //       email: \"\",\n    //       password: \"\",\n    //       confirmPassword: \"\"\n    //     },\n    //     () => console.log(this.state)\n    //   );\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"\">\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign Up with email and Password</span>\n\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            handleChange={this.handleChange}\n            value={displayName}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            handleChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            handleChange={this.handleChange}\n            value={confirmPassword}\n            label=\"Confirm Password\"\n            required\n          />\n\n          <CustomButton type=\"submit\">Sign Up</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}