{"ast":null,"code":"import React from\"react\";import'./cart-dropdown.styles.scss';import{connect}from'react-redux';import CartItem from\"../cart-item/cart-item.component\";import{selectCartItems}from\"../../redux/cart/cart.selector\";import{withRouter}from\"react-router-dom\";import{toggleCartHidden}from\"../../redux/cart/cart.actions\";import CustomButton from\"../custom-button/custom-button.component\";var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return React.createElement(\"div\",{className:\"cart-dropdown\"},React.createElement(\"div\",{className:\"cart-items\"},cartItems.length?cartItems.map(function(cartItem){return React.createElement(CartItem,{key:cartItem.id,item:cartItem});}):React.createElement(\"span\",{className:\"empty-message\"},\"your cart is empty\")),React.createElement(CustomButton,{onClick:function onClick(){history.push('/checkout');dispatch(toggleCartHidden());}},\" GO TO CHECKOUT \"));};var mapStateToProps=function mapStateToProps(state){return{cartItems:selectCartItems(state)};};export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CartItem","selectCartItems","withRouter","toggleCartHidden","CustomButton","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state"],"mappings":"AAAA,MAAQA,CAAAA,KAAR,KAAoB,OAApB,CACA,MAAO,6BAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAeC,OAAf,MAAeA,OAAf,CAAwBC,QAAxB,MAAwBA,QAAxB,OACb,4BAAK,SAAS,CAAC,eAAf,EACI,2BAAK,SAAS,CAAC,YAAf,EACKF,SAAS,CAACG,MAAV,CAEGH,SAAS,CAACI,GAAV,CAAc,SAAAC,QAAQ,QAClB,qBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACC,EAAxB,CAA4B,IAAI,CAAED,QAAlC,EADkB,EAAtB,CAFH,CAMA,4BAAM,SAAS,CAAC,eAAhB,uBAPL,CADJ,CAWI,oBAAC,YAAD,EAAc,OAAO,CACjB,kBAAM,CAACJ,OAAO,CAACM,IAAR,CAAa,WAAb,EACNL,QAAQ,CAACL,gBAAgB,EAAjB,CAAR,CACJ,CAHD,qBAXJ,CADa,EAArB,CAmBA,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCT,SAAS,CAAEL,eAAe,CAACc,KAAD,CADM,CAAZ,EAAxB,CAGA,cAAeb,CAAAA,UAAU,CAACH,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import  React  from \"react\";\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux'\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst CartDropdown = ({ cartItems , history, dispatch}) => (\n        <div className=\"cart-dropdown\">\n            <div className=\"cart-items\" >\n                {cartItems.length ? \n                (\n                    cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} item={cartItem}/>\n                    ))\n                ):\n                (<span className=\"empty-message\">your cart is empty</span>)\n                }\n            </div>\n            <CustomButton onClick={\n                () => {history.push('/checkout');\n                 dispatch(toggleCartHidden())\n            }}> GO TO CHECKOUT </CustomButton>\n        </div>\n    )\n\nconst mapStateToProps = (state) => ({\n    cartItems: selectCartItems(state)\n})\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}