{"ast":null,"code":"import _regeneratorRuntime from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from\"redux-saga/effects\";import ShopActionTypes from\"./shop.types\";import{fetchCollectionsSuccess,fetchCollectionsFailure}from\"../shop/shop.actions\";import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';export function fetchCollectionAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return console.log(\"I'm Fired\");case 2:_context.prev=2;collectionRef=firestore.collection(\"collections\");_context.next=6;return collectionRef.get();case 6:snapshot=_context.sent;_context.next=9;return call(convertCollectionsSnapshotToMap,snapshot);case 9:collectionsMap=_context.sent;_context.next=12;return put(fetchCollectionsSuccess(collectionsMap));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);_context.next=18;return put(fetchCollectionsFailure(_context.t0.message));case 18:case\"end\":return _context.stop();}}},_marked,null,[[2,14]]);}export function fetchCollectionStart(){return _regeneratorRuntime.wrap(function fetchCollectionStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionAsync","fetchCollectionStart","shopSagas","takeLatest","call","put","all","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","console","log","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"6KAKiBA,oB,iDAwBAC,oB,iDAKAC,S,EAlCjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,uBAAT,CAAkCC,uBAAlC,KAAiE,sBAAjE,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CAEA,MAAO,SAAUX,CAAAA,oBAAV,0LACH,MAAMY,CAAAA,OAAO,CAACC,GAAR,aAAN,CADG,uBAIGC,aAJH,CAImBJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAJnB,iBAKc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CALd,OAKGC,QALH,+BAMoB,MAAMb,CAAAA,IAAI,CAACO,+BAAD,CAAkCM,QAAlC,CAAV,CANpB,OAMGC,cANH,gCAOH,MAAMb,CAAAA,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT,CAPG,0GAUC,MAAMb,CAAAA,GAAG,CAACI,uBAAuB,CAAC,YAAMU,OAAP,CAAxB,CAAT,CAVD,qEAwBP,MAAO,SAAUlB,CAAAA,oBAAV,oJACH,MAAME,CAAAA,UAAU,CAACI,eAAe,CAACa,uBAAjB,CACZpB,oBADY,CAAhB,CADG,wDAKP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMI,CAAAA,GAAG,CAAC,CACNF,IAAI,CAACH,oBAAD,CADE,CAAD,CAAT,CADG","sourcesContent":["import { takeLatest ,call, put, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport function* fetchCollectionAsync() {\n    yield console.log(`I'm Fired`);\n\ntry{\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n}\n    catch(error){\n        yield put(fetchCollectionsFailure(error.message));\n    }\n\n    // dispatch(fetchCollectionStart());\n\n    // collectionRef\n    // .get()\n    // .then(snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\n    // })\n    // .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync)\n}\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}