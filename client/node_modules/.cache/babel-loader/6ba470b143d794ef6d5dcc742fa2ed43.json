{"ast":null,"code":"import _defineProperty from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/rahul/Desktop/projects/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from\"react\";import FormInput from\"../form-input/form-input.component\";import CustomButton from\"../custom-button/custom-button.component\";import\"./sign-up.styles.scss\";import{connect}from\"react-redux\";import{signUpStart as _signUpStart}from\"../../redux/user/user.actions\";var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:\"\",email:\"\",password:\"\",confirmPassword:\"\"}),_useState2=_slicedToArray(_useState,2),userCredentails=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentails.displayName,email=userCredentails.email,password=userCredentails.password,confirmPassword=userCredentails.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Passwords don't match\");return _context.abrupt(\"return\");case 4:signUpStart({email:email,password:password,displayName:displayName});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread({},userCredentails,_defineProperty({},name,value)));};return React.createElement(\"div\",{className:\"\"},React.createElement(\"h2\",{className:\"title\"},\"I do not have an account\"),React.createElement(\"span\",null,\"Sign Up with email and Password\"),React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},React.createElement(FormInput,{type:\"text\",name:\"displayName\",handleChange:handleChange,value:displayName,label:\"Display Name\",required:true}),React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,handleChange:handleChange,label:\"Email\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,handleChange:handleChange,label:\"Password\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",handleChange:handleChange,value:confirmPassword,label:\"Confirm Password\",required:true}),React.createElement(CustomButton,{type:\"submit\"},\"Sign Up\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/client/src/components/signup/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentails","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-up.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({signUpStart}) => {\n  const [userCredentails, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentails;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    signUpStart({ email, password, displayName });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setUserCredentials({ ...userCredentails, [name]: value });\n  };\n\n  return (\n    <div className=\"\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign Up with email and Password</span>\n\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          handleChange={handleChange}\n          value={displayName}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          handleChange={handleChange}\n          value={confirmPassword}\n          label=\"Confirm Password\"\n          required\n        />\n\n        <CustomButton type=\"submit\">Sign Up</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}