{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/projects/crwn-clothing/src/components/signIn/signIn.component.jsx\";\nimport React from \"react\";\nimport './signIn.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInstart = this.props.googleSignInstart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sign in with email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Sign In \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInstart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Google Sign In \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInstart: () => dispatch(googleSignInstart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/rahul/Desktop/projects/crwn-clothing/src/components/signIn/signIn.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","name","value","render","googleSignInstart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './signIn.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'\nimport { emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            email : '',\n            password : ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n\n        try{\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({email: '',password: ''});\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name] : value })\n    }\n\n    render(){\n        const { googleSignInstart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                     name='email'\n                     type='email' \n                     label='Email'\n                     handleChange={this.handleChange} \n                     value={this.state.email} \n                     required/>\n\n                    <FormInput \n                    name='password' \n                    type='password'\n                    label='Password' \n                    handleChange={this.handleChange} \n                    value={this.state.password} \n                    required/>\n\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign In </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInstart} isGoogleSignIn> Google Sign In </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInstart: () => dispatch(googleSignInstart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}